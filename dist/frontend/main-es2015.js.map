{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/components/employees/employees.component.html","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/components/employees/employees.component.css","/./src/app/components/employees/employees.component.ts","/./src/app/models/employee.ts","/./src/app/services/employee.service.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<nav class=\\\"nav-wrapper blue\\\">\\n  <div class=\\\"container\\\">\\n    <a href=\\\"/\\\" class=\\\"brand-logo\\\">MEAN Crud</a>\\n  </div>\\n</nav>\\n<app-employees></app-employees>\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col s5\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-content\\\">\\n                    <form #employeeForm=\\\"ngForm\\\" (ngSubmit)=addEmployee(employeeForm)>\\n                        <div class=\\\"row\\\">\\n                            <input type=\\\"hidden\\\" name=\\\"_id\\\" #_id=\\\"ngModel\\\" [(ngModel)] = \\\"employeeService.selectedEmployee._id\\\">\\n                            <div class=\\\"input-field\\\">\\n                                <input type=\\\"text\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.name\\\" placeholder=\\\"Enter your name\\\">\\n                            </div>\\n\\n                            <div class=\\\"input-field\\\">\\n                                <input type=\\\"text\\\" name=\\\"position\\\" #position=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.position\\\" placeholder=\\\"Enter your position\\\">\\n                            </div>\\n\\n                            <div class=\\\"input-field\\\">\\n                                <input type=\\\"text\\\" name=\\\"office\\\" #office=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.office\\\" placeholder=\\\"Enter your office\\\">\\n                            </div>\\n\\n                            <div class=\\\"input-field\\\">\\n                                <input type=\\\"text\\\" name=\\\"salary\\\" #salary=\\\"ngModel\\\" [(ngModel)]=\\\"employeeService.selectedEmployee.salary\\\" placeholder=\\\"Enter your salary\\\">\\n                            </div>\\n\\n                            <div class=\\\"card-action\\\">\\n                                <div class=\\\"input-field col s12\\\">\\n                                    <button class=\\\"btn\\\">Save</button>\\n                                    <button class=\\\"btn right\\\" (click)=\\\"resetForm(employeeForm)\\\">Clean</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col s7\\\">\\n            <table>\\n                <thead>\\n                    <th>Name</th>\\n                    <th>Position</th>\\n                    <th>Office</th>\\n                    <th>Operations</th>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let employee of employeeService.employees\\\">\\n                        <td>{{ employee.name }}</td>\\n                        <td>{{ employee.position }}</td>\\n                        <td>{{ employee.office }}</td>\\n                        <td>\\n                            <a (click)=\\\"editEmployee(employee)\\\" style=\\\"cursor:pointer\\\">\\n                                <i class=\\\"material-icons\\\">edit</i>\\n                            </a>\\n\\n                            <a (click)=\\\"deleteEmployee(employee._id)\\\" style=\\\"cursor:pointer\\\">\\n                                    <i class=\\\"material-icons\\\">delete</i>\\n                                </a>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { EmployeesComponent } from './components/employees/employees.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeesComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW1wbG95ZWVzL2VtcGxveWVlcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\nimport { EmployeeService } from '../../services/employee.service';\nimport { NgForm } from '@angular/forms';\nimport { Employee } from 'src/app/models/employee';\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css'],\n  providers: [EmployeeService]\n})\nexport class EmployeesComponent implements OnInit {\n\n  constructor(private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.getEmployees();\n  }\n\n  addEmployee(form: NgForm){\n    if(form.value._id){\n      this.employeeService.putEmployee(form.value)\n        .subscribe(res => {\n          this.resetForm(form);\n          M.toast({html: 'Edited Employee'});\n          this.getEmployees();\n        })\n    }else{\n      this.employeeService.postEmployee(form.value)\n      .subscribe(res => {\n        this.resetForm(form);\n        M.toast({html: 'Save Successfully'});\n        this.getEmployees();\n      });\n    }\n\n  }\n\n  deleteEmployee(_id: string){\n    if(confirm('Are ypu sure you want delete it?')){\n      this.employeeService.deleteEmployee(_id)\n        .subscribe(res => {\n          M.toast({html: 'Deleted Successfully'});\n          this.getEmployees();\n        });\n    }\n  }\n\n  getEmployees(){\n    this.employeeService.getEmployees()\n      .subscribe(res => {\n        this.employeeService.employees = res as Employee[];\n        console.log(res);\n      })\n  }\n\n  editEmployee(employee:Employee){\n    this.employeeService.selectedEmployee = employee;\n  }\n\n  resetForm(form? :NgForm){\n    if(form){\n      form.reset();\n      this.employeeService.selectedEmployee = new Employee();\n    }\n  }\n\n}\n","export class Employee {\n\n    constructor(_id='', name='', position='', office='', salary=0 ){\n        this._id = _id;\n        this.name = name;\n        this.position = position;\n        this.office = office;\n        this.salary = salary;\n    }\n\n    _id: string;\n    name: string;\n    position: string;\n    office: string;\n    salary: number;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { Employee } from '../models/employee';\nimport { EmployeesComponent } from '../components/employees/employees.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  selectedEmployee: Employee\n  employees : Employee[];\n  readonly URL_API = 'http://localhost:3000/api/employees';\n\n  constructor(private http: HttpClient) {\n      this.selectedEmployee = new Employee();\n   }\n\n  getEmployees(){\n    return this.http.get(this.URL_API);\n  }\n\n  postEmployee(Employee: Employee){\n    return this.http.post(this.URL_API, Employee);\n  }\n\n  putEmployee(employee: Employee){\n    return this.http.put(this.URL_API + `/${employee._id}`, employee);\n  }\n\n  deleteEmployee(_id: string){\n    return this.http.delete(this.URL_API + `/${_id}`);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}